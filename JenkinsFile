pipeline {
  agent any

  options {
    disableConcurrentBuilds()   // avoid workspace @2/@tmp races
  }

  environment {
    IMAGE_NAME    = "purnachandrared/simplelife-app"
    TAG           = "${env.BUILD_NUMBER}"
    // keep system dirs first, then brew dirs, then existing PATH
    PATH          = "/bin:/usr/bin:/usr/local/bin:/opt/homebrew/bin:${env.PATH}"
    // isolate Docker auth in workspace (avoids macOS keychain helper)
    DOCKER_CONFIG = "${env.WORKSPACE}/.docker"
  }

  stages {
    stage('Checkout') {
      steps { checkout scm }
    }

    stage('Build') {
      steps {
        sh '''
          docker --version
          docker system prune -f || true
          docker build -t ${IMAGE_NAME}:${TAG} -t ${IMAGE_NAME}:latest .
        '''
      }
    }

    stage('Login & Push') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'U', passwordVariable: 'P')]) {
          sh '''
            mkdir -p "$DOCKER_CONFIG"
            echo "$P" | docker login -u "$U" --password-stdin
            docker push ${IMAGE_NAME}:${TAG}
            docker push ${IMAGE_NAME}:latest
          '''
        }
      }
    }

    stage('Deploy (local)') {
      steps {
        sh '''
          docker rm -f my-site || true
          docker run -d --name my-site -p 80:80 ${IMAGE_NAME}:${TAG}
        '''
      }
    }
  }

  post {
    always {
      sh 'docker logout || true'
      sh 'rm -rf "$DOCKER_CONFIG" || true'
    }
  }
}
